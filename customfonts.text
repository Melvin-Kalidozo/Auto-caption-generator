{/* Custom caption settings */}
              <div className="mb-4">
                <label className="block text-gray-300">Font Size:</label>
                <input
                  type="number"
                  value={fontSize}
                  onChange={(e) => setFontSize(e.target.value)}
                  className="w-full p-2 border rounded-lg bg-gray-700 text-white"
                />
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Font Color:</label>
                <input
                  type="color"
                  value={fontColor}
                  onChange={(e) => setFontColor(e.target.value)}
                  className="w-full p-2 border rounded-lg"
                  style={{ backgroundColor: fontColor }}
                />
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Font Weight:</label>
                <input
                  type="checkbox"
                  checked={fontWeight}
                  onChange={(e) => setFontWeight(e.target.checked)}
                  className="mr-2"
                />
                Bold
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Font Style:</label>
                <input
                  type="checkbox"
                  checked={fontItalic}
                  onChange={(e) => setFontItalic(e.target.checked)}
                  className="mr-2"
                />
                Italic
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Underline:</label>
                <input
                  type="checkbox"
                  checked={fontUnderline}
                  onChange={(e) => setFontUnderline(e.target.checked)}
                  className="mr-2"
                />
                Underline
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Shadow:</label>
                <select
                  value={isShadowEnabled ? "1" : "0"}
                  onChange={(e) => setIsShadowEnabled(e.target.value === "1")}
                  className="w-full p-2 border rounded-lg bg-gray-700 text-white"
                >
                  <option value="0">No Shadow</option>
                  <option value="1">Shadow</option>
                </select>
              </div>

              <div className="mb-4 flex items-center">
                <label className="text-gray-300 mr-2">Enable Outline:</label>
                <input
                  type="checkbox"
                  checked={isOutlineEnabled}
                  onChange={(e) => setIsOutlineEnabled(e.target.checked)}
                />
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Alignment:</label>
                <select
                  value={alignment}
                  onChange={(e) => setAlignment(e.target.value)}
                  className="w-full p-2 border rounded-lg bg-gray-700 text-white"
                >
                  <option value="Left">Left</option>
                  <option value="Center">Center</option>
                  <option value="Right">Right</option>
                </select>
              </div>

              <div className="mb-4">
                <label className="block text-gray-300">Caption Text:</label>
                <input
                  type="text"
                  value={captionText}
                  onChange={(e) => setCaptionText(e.target.value)}
                  className="w-full p-2 border rounded-lg bg-gray-700 text-white"
                />
              </div>

              {showShadowColorSelector && (
                <div className="mb-4">
                  <label className="block text-gray-300">Shadow Color:</label>
                  <input
                    type="color"
                    value={shadow}
                    onChange={(e) => setShadow(e.target.value)}
                    className="w-full p-2 border rounded-lg"
                    style={{ backgroundColor: shadow }}
                  />
                </div>
              )}

              {showOutlineColorSelector && (
                <div className="mb-4">
                  <label className="block text-gray-300">Outline Color:</label>
                  <input
                    type="color"
                    value={outline}
                    onChange={(e) => setOutline(e.target.value)}
                    className="w-full p-2 border rounded-lg"
                    style={{ backgroundColor: outline }}
                  />
                </div>
              )}